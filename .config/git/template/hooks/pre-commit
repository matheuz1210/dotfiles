#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".



# Redirect output to stderr.
exec 1>&2

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi
files=$(git diff --cached --name-only "$against")

# If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached "$against" --



# show files that match with this shebang
check_shebang() {
	program="$1"
	shift
	for f in "$@"; do
        if head -n 1 "$f"| grep -q '^#!.*'"$program" ; then
            echo "$f"
        fi
	done
}

flake8_ignore="--ignore=E501,E261"
for f in $files; do
		for py in $(check_shebang python "$f"); do
			flake8 "$flake8_ignore" "$py"
			continue
		done

		for sh in $(check_shebang sh "$f"); do
			shellcheck "$sh"
			continue
		done

	case $f in
		*.rs)
			cargo clippy "$f"
			;;
		*.py)
			flake8 "$flake8_ignore" "$f"
			black "$f"
			;;
		*.sh|*.bash)
			shellcheck "$sh"
			;;
	esac
done
